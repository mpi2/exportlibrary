/**
 * Copyright (C) 2013 Julian Atienza Herrero <j.atienza at har.mrc.ac.uk>
 *
 * MEDICAL RESEARCH COUNCIL UK MRC
 *
 * Harwell Mammalian Genetics Unit
 *
 * http://www.har.mrc.ac.uk
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.08 at 08:51:23 AM BST 
//
package org.mousephenotype.dcc.exportlibrary.datastructure.tracker.validation_report;

import java.io.Serializable;
import java.util.Calendar;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.hibernate.annotations.Index;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.procedure.CentreProcedure;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.procedure.Experiment;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.procedure.Housing;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.procedure.Line;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.specimen.CentreSpecimen;
import org.mousephenotype.dcc.exportlibrary.datastructure.core.specimen.Specimen;
import org.mousephenotype.dcc.exportlibrary.datastructure.tracker.submission.Submission;
import org.mousephenotype.dcc.exportlibrary.datastructure.tracker.validation.Validation;
import org.w3._2001.xmlschema.Adapter1;

/**
 *
 * For each (submission, centreProcedure, Experiment) points to every validation
 * happening to every experiment under centreProcedure or centreProcedure itself
 * For each (submission, centreSpecimen, Specimen) points to every validation
 * happening to every specimen under centreSpecimen or centreSpecimen itself
 *
 * Keeps the history of modifications based on the reportIdentifier
 *
 * ReportIdentifier:
 *
 * submission trackerID File specific |--centreProcedure
 * centreID_trackerID_centreProcedureHJID File specific | |--experiment
 * centreID_experimentID_experimentSequenceID?_specimenID+ Can be submitted
 * multiple times | | |--specimen | | |--procedure | | | |--SimpleParameter | |
 * | |--OntologyParameter | | | |--SeriesParameter | | | |--MediaParameter | | |
 * |--MediaSampleParameter | | | |--SeriesMediaParameter | | |
 * |--ProcedureMetadata |--centreSpecimen centreID_trackerID_centreSpecimenHJID
 * File specific | |--mouse centreID_specimenID Can be submitted multiple times
 * | |--embryo centreID_specimenID Can be submitted multiple times
 *
 *
 *
 * submission : trackerID (no centre as submission can have multiple centres)
 * specimen : centreID_specimenID experiment :
 * centreID_experimentID_experimentSequenceID?_specimenID+ (if sequenceID
 * present add it. Add every specimenID related to this experiment)
 * centreProcedure : centreID_trackerID_centreProcedureHJID centreSpecimen :
 * centreID_trackerID_centreSpecimenHJID
 *
 *
 *
 *
 *
 * <p>Java class for ValidationReport complex type.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 *
 * <pre>
 * &lt;complexType name="ValidationReport">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="submission" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/tracker/submission}Submission"/>
 *         &lt;element name="centreProcedure" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/core/procedure}CentreProcedure" minOccurs="0"/>
 *         &lt;element name="experiment" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/core/procedure}Experiment" minOccurs="0"/>
 *         &lt;element name="centreSpecimen" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/core/specimen}CentreSpecimen" minOccurs="0"/>
 *         &lt;element name="specimen" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/core/specimen}Specimen" minOccurs="0"/>
 *         &lt;element name="validation" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/tracker/validation}Validation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="resourceVersion" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/tracker/validation_report}ResourceVersion"/>
 *       &lt;/sequence>
 *       &lt;attribute name="reportIdentifier" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="duration" use="required" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="submissionDate" use="required" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="isValid" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="superseeded" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="phase" use="required" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/tracker/validation_report}Phase" />
 *       &lt;attribute name="status" use="required" type="{http://www.mousephenotype.org/dcc/exportlibrary/datastructure/tracker/validation_report}Status" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValidationReport", propOrder = {
    "submission",
    "centreProcedure",
    "experiment",
    "centreSpecimen",
    "specimen",
    "validation",
    "resourceVersion"
})
@Entity(name = "ValidationReport")
@Table(name = "VALIDATIONREPORT")
@Inheritance(strategy = InheritanceType.JOINED)
public class ValidationReport
        implements Serializable, Equals, HashCode {

    @XmlElement(required = true)
    protected Submission submission;
    protected CentreProcedure centreProcedure;
    protected Experiment experiment;
    protected Line line;
    protected Housing housing;
    protected CentreSpecimen centreSpecimen;
    protected Specimen specimen;
    protected Set<Validation> validation;
    @XmlElement(required = true)
    protected ResourceVersion resourceVersion;
    @XmlAttribute(name = "reportIdentifier", required = true)
    protected String reportIdentifier;
    @XmlAttribute(name = "duration", required = true)
    protected long duration;
    @XmlAttribute(name = "submissionDate", required = true)
    @XmlJavaTypeAdapter(Adapter1.class)
    @XmlSchemaType(name = "dateTime")
    protected Calendar submissionDate;
    @XmlAttribute(name = "isValid", required = true)
    protected boolean isValid;
    @XmlAttribute(name = "superseeded", required = true)
    protected boolean superseeded;
    @XmlAttribute(name = "phase", required = true)
    protected Phase phase;
    @XmlAttribute(name = "status", required = true)
    protected Status status;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the submission property.
     *
     * @return possible object is {@link Submission }
     *
     */
    @OneToOne(targetEntity = Submission.class)
    @JoinColumn(name = "SUBMISSION_VALIDATIONREPORT__0")
    public Submission getSubmission() {
        return submission;
    }

    /**
     * Sets the value of the submission property.
     *
     * @param value allowed object is {@link Submission }
     *
     */
    public void setSubmission(Submission value) {
        this.submission = value;
    }

    @Transient
    public boolean isSetSubmission() {
        return (this.submission != null);
    }

    /**
     * Gets the value of the centreProcedure property.
     *
     * @return possible object is {@link CentreProcedure }
     *
     */
    @OneToOne(targetEntity = CentreProcedure.class)
    @JoinColumn(name = "CENTREPROCEDURE_VALIDATIONRE_0")
    public CentreProcedure getCentreProcedure() {
        return centreProcedure;
    }

    /**
     * Sets the value of the centreProcedure property.
     *
     * @param value allowed object is {@link CentreProcedure }
     *
     */
    public void setCentreProcedure(CentreProcedure value) {
        this.centreProcedure = value;
    }

    @Transient
    public boolean isSetCentreProcedure() {
        return (this.centreProcedure != null);
    }

    /**
     * Gets the value of the experiment property.
     *
     * @return possible object is {@link Experiment }
     *
     */
    @OneToOne(targetEntity = Experiment.class)
    @JoinColumn(name = "EXPERIMENT_VALIDATIONREPORT__0")
    public Experiment getExperiment() {
        return experiment;
    }

    /**
     * Sets the value of the experiment property.
     *
     * @param value allowed object is {@link Experiment }
     *
     */
    public void setExperiment(Experiment value) {
        this.experiment = value;
    }

    @Transient
    public boolean isSetExperiment() {
        return (this.experiment != null);
    }

    /*************/
    
    /**
     * Gets the value of the experiment property.
     *
     * @return possible object is {@link Experiment }
     *
     */
    @OneToOne(targetEntity = Line.class)
    @JoinColumn(name = "LINE_VALIDATIONREPORT__0")
    public Line getLine() {
        return line;
    }

    /**
     * Sets the value of the experiment property.
     *
     * @param value allowed object is {@link Experiment }
     *
     */
    public void setLine(Line value) {
        this.line = value;
    }

    @Transient
    public boolean isSetLine() {
        return (this.line != null);
    }
    
    /************/
    
    
    /*************/
    
    /**
     * Gets the value of the experiment property.
     *
     * @return possible object is {@link Experiment }
     *
     */
    @OneToOne(targetEntity = Housing.class)
    @JoinColumn(name = "HOUSING_VALIDATIONREPORT__0")
    public Housing getHousing() {
        return housing;
    }

    /**
     * Sets the value of the experiment property.
     *
     * @param value allowed object is {@link Experiment }
     *
     */
    public void setHousing(Housing value) {
        this.housing = value;
    }

    @Transient
    public boolean isSetHousing() {
        return (this.housing != null);
    }
    
    /************/
    
    
    
    /**
     * Gets the value of the centreSpecimen property.
     *
     * @return possible object is {@link CentreSpecimen }
     *
     */
    @OneToOne(targetEntity = CentreSpecimen.class)
    @JoinColumn(name = "CENTRESPECIMEN_VALIDATIONREP_0")
    public CentreSpecimen getCentreSpecimen() {
        return centreSpecimen;
    }

    /**
     * Sets the value of the centreSpecimen property.
     *
     * @param value allowed object is {@link CentreSpecimen }
     *
     */
    public void setCentreSpecimen(CentreSpecimen value) {
        this.centreSpecimen = value;
    }

    @Transient
    public boolean isSetCentreSpecimen() {
        return (this.centreSpecimen != null);
    }

    /**
     * Gets the value of the specimen property.
     *
     * @return possible object is {@link Specimen }
     *
     */
    @OneToOne(targetEntity = Specimen.class)
    @JoinColumn(name = "SPECIMEN_VALIDATIONREPORT_HJ_0")
    public Specimen getSpecimen() {
        return specimen;
    }

    /**
     * Sets the value of the specimen property.
     *
     * @param value allowed object is {@link Specimen }
     *
     */
    public void setSpecimen(Specimen value) {
        this.specimen = value;
    }

    @Transient
    public boolean isSetSpecimen() {
        return (this.specimen != null);
    }

    /**
     * Gets the value of the validation property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the validation property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidation().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Validation }
     *
     *
     */
    @ManyToMany(targetEntity = Validation.class, cascade = {
        CascadeType.ALL
    })
    @JoinTable(name = "VALIDATION_REPORT_VALIDATION", joinColumns = {
        @JoinColumn(name = "validationreport", referencedColumnName = "HJID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "validation", referencedColumnName = "HJID")
    }, uniqueConstraints =
            @UniqueConstraint(columnNames = {"validationreport", "validation"}))
    @OrderColumn(name = "VALIDATION_HJORDER")
    public Set<Validation> getValidation() {
        if (validation == null) {
            validation = new HashSet<>();
        }
        return this.validation;
    }

    /**
     *
     *
     */
    public void setValidation(Set<Validation> validation) {
        this.validation = validation;
    }

    @Transient
    public boolean isSetValidation() {
        return ((this.validation != null) && (!this.validation.isEmpty()));
    }

    public void unsetValidation() {
        this.validation = null;
    }

    /**
     * Gets the value of the resourceVersion property.
     *
     * @return possible object is {@link ResourceVersion }
     *
     */
    @OneToOne(targetEntity = ResourceVersion.class, cascade = {
        CascadeType.ALL
    }, optional = true)
    @JoinColumn(name = "RESOURCEVERSION_VALIDATIONRE_0")
    public ResourceVersion getResourceVersion() {
        return resourceVersion;
    }

    /**
     * Sets the value of the resourceVersion property.
     *
     * @param value allowed object is {@link ResourceVersion }
     *
     */
    public void setResourceVersion(ResourceVersion value) {
        this.resourceVersion = value;
    }

    @Transient
    public boolean isSetResourceVersion() {
        return (this.resourceVersion != null);
    }

    /**
     * Gets the value of the reportIdentifier property.
     *
     * @return possible object is {@link String }
     *
     */
    @Index(name = "reportIdentifierIndex", columnNames = {
        "REPORTIDENTIFIER"
    })
    @Basic
    @Column(name = "REPORTIDENTIFIER", length = 255)
    public String getReportIdentifier() {
        return reportIdentifier;
    }

    /**
     * Sets the value of the reportIdentifier property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setReportIdentifier(String value) {
        this.reportIdentifier = value;
    }

    @Transient
    public boolean isSetReportIdentifier() {
        return (this.reportIdentifier != null);
    }

    /**
     * Gets the value of the duration property.
     *
     */
    @Basic
    @Column(name = "DURATION", precision = 20, scale = 0)
    public long getDuration() {
        return duration;
    }

    /**
     * Sets the value of the duration property.
     *
     */
    public void setDuration(long value) {
        this.duration = value;
    }

    @Transient
    public boolean isSetDuration() {
        return true;
    }

    /**
     * Gets the value of the submissionDate property.
     *
     * @return possible object is {@link String }
     *
     */
    @Basic
    @Column(name = "SUBMISSIONDATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Calendar getSubmissionDate() {
        return submissionDate;
    }

    /**
     * Sets the value of the submissionDate property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setSubmissionDate(Calendar value) {
        this.submissionDate = value;
    }

    @Transient
    public boolean isSetSubmissionDate() {
        return (this.submissionDate != null);
    }

    /**
     * Gets the value of the isValid property.
     *
     */
    @Basic
    @Column(name = "ISVALID")
    public boolean isIsValid() {
        return isValid;
    }

    /**
     * Sets the value of the isValid property.
     *
     */
    public void setIsValid(boolean value) {
        this.isValid = value;
    }

    @Transient
    public boolean isSetIsValid() {
        return true;
    }

    /**
     * Gets the value of the superseeded property.
     *
     */
    @Basic
    @Column(name = "SUPERSEEDED")
    public boolean isSuperseeded() {
        return superseeded;
    }

    /**
     * Sets the value of the superseeded property.
     *
     */
    public void setSuperseeded(boolean value) {
        this.superseeded = value;
    }

    @Transient
    public boolean isSetSuperseeded() {
        return true;
    }

    /**
     * Gets the value of the phase property.
     *
     * @return possible object is {@link Phase }
     *
     */
    @Basic
    @Column(name = "PHASE", length = 255)
    @Enumerated(EnumType.STRING)
    public Phase getPhase() {
        return phase;
    }

    /**
     * Sets the value of the phase property.
     *
     * @param value allowed object is {@link Phase }
     *
     */
    public void setPhase(Phase value) {
        this.phase = value;
    }

    @Transient
    public boolean isSetPhase() {
        return (this.phase != null);
    }

    /**
     * Gets the value of the status property.
     *
     * @return possible object is {@link Status }
     *
     */
    @Basic
    @Column(name = "STATUS", length = 255)
    @Enumerated(EnumType.STRING)
    public Status getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     *
     * @param value allowed object is {@link Status }
     *
     */
    public void setStatus(Status value) {
        this.status = value;
    }

    @Transient
    public boolean isSetStatus() {
        return (this.status != null);
    }

    /**
     * Gets the value of the hjid property.
     *
     * @return possible object is {@link Long }
     *
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     *
     * @param value allowed object is {@link Long }
     *
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Override
    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ValidationReport)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ValidationReport that = ((ValidationReport) object);
        {
            Submission lhsSubmission;
            lhsSubmission = this.getSubmission();
            Submission rhsSubmission;
            rhsSubmission = that.getSubmission();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "submission", lhsSubmission), LocatorUtils.property(thatLocator, "submission", rhsSubmission), lhsSubmission, rhsSubmission)) {
                return false;
            }
        }
        {
            CentreProcedure lhsCentreProcedure;
            lhsCentreProcedure = this.getCentreProcedure();
            CentreProcedure rhsCentreProcedure;
            rhsCentreProcedure = that.getCentreProcedure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "centreProcedure", lhsCentreProcedure), LocatorUtils.property(thatLocator, "centreProcedure", rhsCentreProcedure), lhsCentreProcedure, rhsCentreProcedure)) {
                return false;
            }
        }
        {
            Experiment lhsExperiment;
            lhsExperiment = this.getExperiment();
            Experiment rhsExperiment;
            rhsExperiment = that.getExperiment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "experiment", lhsExperiment), LocatorUtils.property(thatLocator, "experiment", rhsExperiment), lhsExperiment, rhsExperiment)) {
                return false;
            }
        }
        {
            CentreSpecimen lhsCentreSpecimen;
            lhsCentreSpecimen = this.getCentreSpecimen();
            CentreSpecimen rhsCentreSpecimen;
            rhsCentreSpecimen = that.getCentreSpecimen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "centreSpecimen", lhsCentreSpecimen), LocatorUtils.property(thatLocator, "centreSpecimen", rhsCentreSpecimen), lhsCentreSpecimen, rhsCentreSpecimen)) {
                return false;
            }
        }
        {
            Specimen lhsSpecimen;
            lhsSpecimen = this.getSpecimen();
            Specimen rhsSpecimen;
            rhsSpecimen = that.getSpecimen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specimen", lhsSpecimen), LocatorUtils.property(thatLocator, "specimen", rhsSpecimen), lhsSpecimen, rhsSpecimen)) {
                return false;
            }
        }
        {
            Set<Validation> lhsValidation;
            lhsValidation = (this.isSetValidation() ? this.getValidation() : null);
            Set<Validation> rhsValidation;
            rhsValidation = (that.isSetValidation() ? that.getValidation() : null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validation", lhsValidation), LocatorUtils.property(thatLocator, "validation", rhsValidation), lhsValidation, rhsValidation)) {
                return false;
            }
        }
        {
            ResourceVersion lhsResourceVersion;
            lhsResourceVersion = this.getResourceVersion();
            ResourceVersion rhsResourceVersion;
            rhsResourceVersion = that.getResourceVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "resourceVersion", lhsResourceVersion), LocatorUtils.property(thatLocator, "resourceVersion", rhsResourceVersion), lhsResourceVersion, rhsResourceVersion)) {
                return false;
            }
        }
        {
            String lhsReportIdentifier;
            lhsReportIdentifier = this.getReportIdentifier();
            String rhsReportIdentifier;
            rhsReportIdentifier = that.getReportIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportIdentifier", lhsReportIdentifier), LocatorUtils.property(thatLocator, "reportIdentifier", rhsReportIdentifier), lhsReportIdentifier, rhsReportIdentifier)) {
                return false;
            }
        }
        {
            long lhsDuration;
            lhsDuration = (this.isSetDuration() ? this.getDuration() : 0L);
            long rhsDuration;
            rhsDuration = (that.isSetDuration() ? that.getDuration() : 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                return false;
            }
        }
        {
            Calendar lhsSubmissionDate;
            lhsSubmissionDate = this.getSubmissionDate();
            Calendar rhsSubmissionDate;
            rhsSubmissionDate = that.getSubmissionDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "submissionDate", lhsSubmissionDate), LocatorUtils.property(thatLocator, "submissionDate", rhsSubmissionDate), lhsSubmissionDate, rhsSubmissionDate)) {
                return false;
            }
        }
        {
            boolean lhsIsValid;
            lhsIsValid = (this.isSetIsValid() ? this.isIsValid() : false);
            boolean rhsIsValid;
            rhsIsValid = (that.isSetIsValid() ? that.isIsValid() : false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isValid", lhsIsValid), LocatorUtils.property(thatLocator, "isValid", rhsIsValid), lhsIsValid, rhsIsValid)) {
                return false;
            }
        }
        {
            boolean lhsSuperseeded;
            lhsSuperseeded = (this.isSetSuperseeded() ? this.isSuperseeded() : false);
            boolean rhsSuperseeded;
            rhsSuperseeded = (that.isSetSuperseeded() ? that.isSuperseeded() : false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "superseeded", lhsSuperseeded), LocatorUtils.property(thatLocator, "superseeded", rhsSuperseeded), lhsSuperseeded, rhsSuperseeded)) {
                return false;
            }
        }
        {
            Phase lhsPhase;
            lhsPhase = this.getPhase();
            Phase rhsPhase;
            rhsPhase = that.getPhase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phase", lhsPhase), LocatorUtils.property(thatLocator, "phase", rhsPhase), lhsPhase, rhsPhase)) {
                return false;
            }
        }
        {
            Status lhsStatus;
            lhsStatus = this.getStatus();
            Status rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        return true;
    }

    @Override
    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    @Override
    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Submission theSubmission;
            theSubmission = this.getSubmission();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "submission", theSubmission), currentHashCode, theSubmission);
        }
        {
            CentreProcedure theCentreProcedure;
            theCentreProcedure = this.getCentreProcedure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "centreProcedure", theCentreProcedure), currentHashCode, theCentreProcedure);
        }
        {
            Experiment theExperiment;
            theExperiment = this.getExperiment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "experiment", theExperiment), currentHashCode, theExperiment);
        }
        {
            CentreSpecimen theCentreSpecimen;
            theCentreSpecimen = this.getCentreSpecimen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "centreSpecimen", theCentreSpecimen), currentHashCode, theCentreSpecimen);
        }
        {
            Specimen theSpecimen;
            theSpecimen = this.getSpecimen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specimen", theSpecimen), currentHashCode, theSpecimen);
        }
        {
            Set<Validation> theValidation;
            theValidation = (this.isSetValidation() ? this.getValidation() : null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validation", theValidation), currentHashCode, theValidation);
        }
        {
            ResourceVersion theResourceVersion;
            theResourceVersion = this.getResourceVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resourceVersion", theResourceVersion), currentHashCode, theResourceVersion);
        }
        {
            String theReportIdentifier;
            theReportIdentifier = this.getReportIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportIdentifier", theReportIdentifier), currentHashCode, theReportIdentifier);
        }
        {
            long theDuration;
            theDuration = (this.isSetDuration() ? this.getDuration() : 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
        }
        {
            Calendar theSubmissionDate;
            theSubmissionDate = this.getSubmissionDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "submissionDate", theSubmissionDate), currentHashCode, theSubmissionDate);
        }
        {
            boolean theIsValid;
            theIsValid = (this.isSetIsValid() ? this.isIsValid() : false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isValid", theIsValid), currentHashCode, theIsValid);
        }
        {
            boolean theSuperseeded;
            theSuperseeded = (this.isSetSuperseeded() ? this.isSuperseeded() : false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "superseeded", theSuperseeded), currentHashCode, theSuperseeded);
        }
        {
            Phase thePhase;
            thePhase = this.getPhase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phase", thePhase), currentHashCode, thePhase);
        }
        {
            Status theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        return currentHashCode;
    }

    @Override
    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }
}
