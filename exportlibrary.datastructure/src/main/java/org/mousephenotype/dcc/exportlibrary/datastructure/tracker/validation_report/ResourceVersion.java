/**
 * Copyright (C) 2013 Julian Atienza Herrero <j.atienza at har.mrc.ac.uk>
 *
 * MEDICAL RESEARCH COUNCIL UK MRC
 *
 * Harwell Mammalian Genetics Unit
 *
 * http://www.har.mrc.ac.uk
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.08 at 08:51:23 AM BST 
//


package org.mousephenotype.dcc.exportlibrary.datastructure.tracker.validation_report;

import org.mousephenotype.dcc.exportlibrary.datastructure.tracker.validation_report.*;
import java.io.Serializable;
import java.util.Calendar;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.w3._2001.xmlschema.Adapter1;


/**
 * <p>Java class for ResourceVersion complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ResourceVersion">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="mgiDownload" use="required" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="impressVersion" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ResourceVersion")
@Entity(name = "ResourceVersion")
@Table(name = "RESOURCEVERSION")
@Inheritance(strategy = InheritanceType.JOINED)
public class ResourceVersion
    implements Serializable, Equals, HashCode
{

    @XmlAttribute(name = "mgiDownload", required = true)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = "dateTime")
    protected Calendar mgiDownload;
    @XmlAttribute(name = "impressVersion", required = true)
    protected String impressVersion;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the mgiDownload property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MGIDOWNLOAD")
    @Temporal(TemporalType.TIMESTAMP)
    public Calendar getMgiDownload() {
        return mgiDownload;
    }

    /**
     * Sets the value of the mgiDownload property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMgiDownload(Calendar value) {
        this.mgiDownload = value;
    }

    @Transient
    public boolean isSetMgiDownload() {
        return (this.mgiDownload!= null);
    }

    /**
     * Gets the value of the impressVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IMPRESSVERSION", length = 255)
    public String getImpressVersion() {
        return impressVersion;
    }

    /**
     * Sets the value of the impressVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImpressVersion(String value) {
        this.impressVersion = value;
    }

    @Transient
    public boolean isSetImpressVersion() {
        return (this.impressVersion!= null);
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ResourceVersion)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ResourceVersion that = ((ResourceVersion) object);
        {
            Calendar lhsMgiDownload;
            lhsMgiDownload = this.getMgiDownload();
            Calendar rhsMgiDownload;
            rhsMgiDownload = that.getMgiDownload();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mgiDownload", lhsMgiDownload), LocatorUtils.property(thatLocator, "mgiDownload", rhsMgiDownload), lhsMgiDownload, rhsMgiDownload)) {
                return false;
            }
        }
        {
            String lhsImpressVersion;
            lhsImpressVersion = this.getImpressVersion();
            String rhsImpressVersion;
            rhsImpressVersion = that.getImpressVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "impressVersion", lhsImpressVersion), LocatorUtils.property(thatLocator, "impressVersion", rhsImpressVersion), lhsImpressVersion, rhsImpressVersion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Calendar theMgiDownload;
            theMgiDownload = this.getMgiDownload();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mgiDownload", theMgiDownload), currentHashCode, theMgiDownload);
        }
        {
            String theImpressVersion;
            theImpressVersion = this.getImpressVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "impressVersion", theImpressVersion), currentHashCode, theImpressVersion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
